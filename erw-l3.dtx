% \iffalse meta-comment
% !TEX program  = pdfLaTeX
%<*internal> 
\iffalse
%</internal> 
%<*readme> 
-----------------------------------------------------------------
##### erw-l3 ---  Utilities using LaTeX3
- Source repository: https://github.com/rogard/erw-l3
- Released under the LaTeX Project Public License v1.3c or later
- See http://www.latex-project.org/lppl.txt
-----------------------------------------------------------------

%</readme> 
%<*internal> 
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
\expandafter\begingroup
\fi
%</internal> 
%<*install> 
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------------------
erw-l3 ---  Utilities using LaTeX3
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2020 by Erwann Rogard

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Erwann Rogard.

This work consists of the file erw-l3.dtx and the derived files:
erw-l3.sty, and erw-l3.pdf.

\endpostamble
\generate{
  \file{\jobname.sty}{\from{\jobname.dtx}{package}}
}
%</install> 
%<install> \endbatchfile
%<*internal> 
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\generate{
  \file{README.md}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
\expandafter\endbatchfile
\else
\expandafter\endgroup
\fi
%</internal> 
%<package> \NeedsTeXFormat{LaTeX2e}[2020/02/02]
%<package> \RequirePackage{etoolbox}[2019/09/21]
%<package> \RequirePackage{l3keys2e}[2020/03/06]
%<package> \RequirePackage{xparse}[2020/03/06]
%<package> \ProvidesExplPackage
%<package> {erw-l3}                                                                            % Package name
%<package> {2020/04/30}                                                                        % Release date
%<package> {1.8}                                                                               % Release version
%<package> {erw-l3 --- Utilities using LaTeX3 }                                                % Description
% 
%<*driver> 
\documentclass[full]{l3doc}
\listfiles
\usepackage[english,french]{babel}
\AtBeginDocument{\selectlanguage{english}}
\usepackage{bookmark}
\usepackage{nolbreaks}
\usepackage{fvextra}% csquotes should be loaded after fvextra
\usepackage[T1]{fontenc}
\usepackage{erw-l3}
\usepackage{tabto}
\usepackage{tcolorbox}
\tcbuselibrary{listings, breakable}
\makeatletter
\newcommand*{\docsetnameref}{\def\@currentlabelname}%https://tex.stackexchange.com/questions/537751
\makeatother
\ExplSyntaxOn
\tl_gset:Nn \partname {Part}
\ExplSyntaxOff
\EnableCrossrefs
\CodelineIndex
\RecordChanges
% ^^A\AtEndDocument { \PrintChanges \PrintIndex }
\ExplSyntaxOn
\providecommand\docarg[1]{\texttt{#1}} % fun[param] (macro) vs fun[arg] (eval)
\providecommand\docargnoval{\c_novalue_tl}
\providecommand\docassign[2]{#1~$\leftarrow$~#2}
\providecommand\docccept[1]{\textit{#1}}
\providecommand\doccceptargspec{arg~spec}
\providecommand\doccceptbool{boolean}
\providecommand\doccceptcode{code}
\providecommand\doccceptcs{control~sequence}
\providecommand\doccceptempty{empty}
\providecommand\doccceptint{integer}
\providecommand\doccceptgroup{local~group}
\providecommand\doccceptkvl{keyval~list}
\providecommand\doccceptopt{option}
\providecommand\doccceptpath{path}
\providecommand\doccceptpre{preamble}
\providecommand\docccepttok{token}
\providecommand\docccepttl{token~list}
\providecommand\docconv[1]{convention~\autoref{conv:#1}}
\providecommand\docenvdoc{\env{document}}
\providecommand\docdefaultfor{default~for~}
\providecommand\doceval[1]{\texttt{\char`\{}#1\texttt{\char`\}}}
\providecommand\docfillblank{\begin{minipage}[t]{\linewidth}\end{minipage}}
\providecommand\docissuedo{Do: }
\providecommand\docissuedont{Don't: }
\providecommand\docissuesymp{Symptom: }
\providecommand\doclist[1]{Listing~\ref{listing:#1}}
\providecommand\docopto[1]{\texttt{[}#1\texttt{]}}
\providecommand\docopte[2]{\texttt{#1}\doceval{#2}}
\providecommand\docoptd[1]{\texttt{\textless}#1\texttt{\textgreater}}
\providecommand\docpipe{\textbar}
\cs_new:Nn \__erw_docu:n{\MakeUppercase #1}
\providecommand\docstep[1]{step~\ref{step:#1}}
\providecommand\docsee{See:~}
\providecommand\docccepttl{token~list}
\providecommand\doctip{\noindent\textbf{Tip}:~}
\providecommand\docU[1]{\exp_args:Nx \__erw_docu:n{#1}}
\providecommand\docvers[2]{v#1.#2}
\providecommand\docwarn{\noindent\textbf{Warning}:~}
\newenvironment{docabstract}[1]%https://latex.org/forum/viewtopic.php?t=12156
{\renewcommand{\abstractname}{#1}\begin{abstract}}
  {\end{abstract}} 
\ExplSyntaxOff
\begin{document}
\DocInput{\jobname.dtx}
\end{document}
%</driver> 
% \fi
% 
% \GetFileInfo{\jobname.sty}
% \begin{documentation}
%   \title{The \pkg{erw-l3} package \thanks{^^A
%   This file describes version \fileversion, last revised \filedate.^^A
% }^^A
% }
%   \author{Erwann Rogard\thanks{firstname dot lastname AusTria gmail dot com}}
%   
%   \date{Released \filedate}
%   
%   \maketitle
%   \begingroup
%   \selectlanguage{english}
%   \begin{docabstract}{Abstract}
%     Utilities based on \pkg{expl3}\cite{interface3}.
%   \end{docabstract}
%   \endgroup
%   
%   \begingroup
%   \selectlanguage{french}
%   \begin{docabstract}{Résumé}
%     Utilitaies de type \pkg{expl3}\cite{interface3}.
%   \end{docabstract}
%   \endgroup
%   ^^A   \selectlanguage{english}
%   
%   \tableofcontents 
%   
%   \part{Usage}\label{part:usage}
%   ^^A   \VerbatimFootnotes
%   
% \leavevmode
% \refstepcounter{section}
% \docsetnameref{Loading the package}
% \label{usage:load} 
% \addcontentsline{toc}{section}{\protect\numberline{\thesection}Loading the package}   
% \begin{function}{\usepackage}
%   \begin{syntax}
%     \cs{usepackage}\doceval{\pkg{\jobname}}
%   \end{syntax}
%   \begin{description}
%   \item[Requirement]\docfillblank
%     \begin{enumerate}
%     \item \file{\jobname.sty} and its dependencies are in the path of the \LaTeX~engine. See \autoref{part:other}, \autoref{other:support}.
%     \item Goes in the~\docccept{\doccceptpre}
%     \end{enumerate}
%   \end{description}  
% \end{function}
%
% \section{basics}\label{usage:basics}
% \begin{function}{\erw_append_arg:nn}
%   \begin{syntax}
%     \cs{erw_cs_apply:Nn}\Arg{arg list}\Arg{arg}
%   \end{syntax}
% \end{function}
% \begin{function}{\erw_cs_apply:Nn, \erw_cs_apply:No, \erw_cs_apply:Nf, \erw_cs_apply:Nx, \erw_cs_apply:cn, \erw_cs_apply:Nnn, \erw_cs_apply:Nnnn, \erw_cs_apply:Nnnnn}
%   \begin{syntax}
%     \cs{erw_cs_apply:Nn} \Arg{\doccceptcs}\Arg{\docccepttl_{1}}
%   \end{syntax}
% \end{function}
% \begin{function}{\erw_cs_identity:n}
%   \begin{syntax}
%     \cs{erw_cs_identity:n}\Arg{arg}
%   \end{syntax}
% \end{function}
% \begin{function}{\erw_cs_set_inline:Nn, \erw_cs_set_inline:cn}
%   \begin{syntax}
%     \cs{erw_cs_set_inline:Nn}\Arg{\doccceptcs}\Arg{\doccceptcode}
%   \end{syntax}
% \end{function}
% \section{\textsf{csint}}
%
% \begin{function}{\erw_csint:nn}
%   \begin{syntax}
%  \cs{erw_csint:nn}\Arg{\doccceptint}\Arg{arg}
% \end{syntax}
% \end{function}
% \begin{function}{\erw_csint_name:n}
%   \begin{syntax}
%  \cs{erw_csint_name:n}\Arg{\doccceptint}
% \end{syntax}
% \end{function}
% \begin{function}{\erw_csint_names:nnn}
%   \begin{syntax}
%  \cs{erw_csint_names:nnn}\Arg{\doccceptint}\Arg{\doccceptint}\Arg{\doccceptint}
% \end{syntax}
% \end{function}
% \begin{function}{\erw_csint_new:n}
%   \begin{syntax}
%  \cs{erw_csint_new:n}\Arg{\doccceptint}
% \end{syntax}
% \end{function}
% \begin{function}{\erw_csint_names_braced:, \erw_csint_names_braced:n, \erw_csint_names_braced:nnn}
% \end{function}
% \begin{function}{\erw_csint_reset:}
% \end{function}
% \section{\textsf{int}} \label{usage:int}
% \begin{function}{\erw_int_range:n, \erw_int_range:nn}
%   \begin{syntax}
%  \cs{erw_int_range:n}\Arg{\doccceptint}
% \end{syntax}
% \end{function}
% \section{\textsf{oper}}\label{usage:oper}
% \begin{function}{\erw_oper_compose:nN, \erw_oper_compose:nn}
%   \begin{syntax}
%  \cs{erw_oper_compose:nn}\Arg{control sequence list}\Arg{initial value}
% \end{syntax}
% \end{function}
% \begin{function}{\erw_oper_compose_c:nN, \erw_oper_compose_c:nn}
% \end{function}
% \begin{function}{\erw_oper_compose_vers:nN, \erw_oper_compose_vers:nn}
% \end{function}
% \begin{function}{\erw_oper_compose_seq:nN, \erw_oper_compose_seq_c:nN,  \erw_oper_compose_seq_vers:nN}
% \end{function}
% \begin{function}{\erw_oper_fold:NN,  \erw_oper_fold:cN}
% \end{function}
% \begin{function}{\erw_oper_gset_function:N, \erw_oper_gset_function:n}
% \end{function}
% \begin{function}{\erw_oper_fold_seq:NN, \erw_seq:cN}
% \end{function}
% \section{\textsf{timestamp}}\label{usage:timest}
% \begin{function}{\erw_timestamp:nn,\erw_timestamp:}
%   \begin{syntax}
%     \cs{erw_timestamp:nn}\doceval{date\docpipe{}time\docpipe{}datetime}\doceval{10\docpipe{}16}
%   \end{syntax}
%   \begin{description}
%   \item[Semantics] Timestamp in base 10 or 16
%   \end{description}
% \end{function}
% \section{\textsf{tl}}
% \begin{function}{\erw_tl_last_item:n}
% \end{function}
% \begin{function}{\erw_tl_map:n, \erw_tl_map:Nn}
% \end{function}
% \begin{function}{\erw_tl_map_inline:nn }
% \end{function}
% \begin{function}{\erw_tl_merge:nn}
% \end{function}
% \begin{function}{\erw_tl_repeat:nn}
% \end{function}
% \begin{function}{\erw_tl_split:nnn, \erw_tl_split:nn}
% \end{function}
% \begin{function}{\erw_tl_map_thread_at:Nnn, \erw_tl_map_thread:Nn}
% \end{function}
% \section{option}\label{usage:option}
% \begin{function}{\erw_option:n}
% \end{function}
%   
%   \clearpage
%   \part{Listing}\label{part:listing}
%   
%   \newtcblisting[auto counter]
%   {listing}[2][]{
%   noparskip,
%   breakable,
%   colback=white,
%   colframe=black,
%   opacitybacktitle=.8,%
%   fonttitle=\bfseries,
%   title={Listing~\thetcbcounter. #1},
%   arc=0pt,
%   outer arc=0pt,
%   boxrule=1pt,
%   listing and text,
%   #2}
%   
%   \section{\textsf{basics}}
%   \phantomsection\addcontentsline{toc}{subsection}
%   {\ref{listing:apply}. }
%   \iffalse
%<*guardlisting>   
%   \fi
\begin{listing}[]
  {label=listing:apply, listing and text}
  \ExplSyntaxOn
  \cs_set:Nn \__foo:n {f(#1)}
  \erw_cs_apply:Nn\__foo:n{X}
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% \section{\textsf{csint}}
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:numbrdcs}.}
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:numbrdcs, listing and text}
 \ExplSyntaxOn
 \cs_new:Nn\__foo:n{f(#1)}
 \cs_new:Nn\__baz:n{h\{#1\}}
 \tl_map_function:nN {{\__baz:n}{g[#1]}{\__foo:n}}\erw_csint_new:n
 \exp_last_unbraced:Nx
 \erw_oper_compose_c:nn
 {{\erw_csint_names_braced:nnn{1}{1}{3}}
 {X}}
 \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% \section{\textsf{int}}
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:range}.}
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:range, listing and text}
  \ExplSyntaxOn
  \erw_int_range:nn{2}{5}\\
  \erw_int_range:n{5}
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% \section{\textsf{oper}}
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:compose}. }
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:compose, listing and text}
  \ExplSyntaxOn
  \cs_set:Nn \__foo:n {f(#1)}
  \cs_set:Nn \__bar:n {g[#1]}
  \cs_set:Nn \__baz:n {h\{#1\}}
  \tl_set:Nn \l_tmpa_tl{X}
  \erw_oper_compose:nN{{\__baz:n}{\__bar:n}{\__foo:n}}\l_tmpa_tl
  \l_tmpa_tl\\
  \tl_set:Nn \l_tmpa_tl{X}
  \erw_oper_compose:nn{{\__baz:n}{\__bar:n}{\__foo:n}}{X}\\
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:compose:c}.}
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:compose:c, listing and text}
  \ExplSyntaxOn
  \cs_set:Nn \__foo:n  {f(#1)}
  \cs_set:Nn \__bar:n  {g[#1]}
  \cs_set:Nn \__baz:n  {h\{#1\}}
  \tl_set:Nn \l_tmpa_tl{X}
  \erw_oper_compose_c:nN{{__baz:n}{__bar:n}{__foo:n}}\l_tmpa_tl
  \l_tmpa_tl\\
  \erw_oper_compose_c:nn{{__baz:n}{__bar:n}{__foo:n}}{X}
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:compose:seq}.}
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:compose:seq, listing and text}
  \ExplSyntaxOn
  \cs_set:Nn \__foo:n {f(#1)}
  \cs_set:Nn \__bar:n {g[#1]}
  \cs_set:Nn \__baz:n {h\{#1\}}
  \seq_new:N \l_tmp_seq
  \seq_put_right:Nn \l_tmp_seq{X}
  \erw_oper_compose_seq:nN{{\__baz:n}{\__bar:n}{\__foo:n}}\l_tmp_seq
  \seq_item:Nn \l_tmp_seq{1}\\
  \seq_item:Nn \l_tmp_seq{2}\\
  \seq_item:Nn \l_tmp_seq{3}\\
  \seq_item:Nn \l_tmp_seq{4}
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:compose:seq:c}. }
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:compose:seq:c, listing and text}
  \ExplSyntaxOn  
  \cs_set:Nn \__foo:n {f(#1)}
  \cs_set:Nn \__bar:n {g[#1]}
  \cs_set:Nn \__baz:n {h\{#1\}}
  \seq_put_right:Nn \l_tmp_seq{X}
  \erw_oper_compose_seq_c:nN{{__baz:n}{__bar:n}{__foo:n}}\l_tmp_seq
  \seq_item:Nn \l_tmp_seq{1}\\
  \seq_item:Nn \l_tmp_seq{2}\\
  \seq_item:Nn \l_tmp_seq{3}\\
  \seq_item:Nn \l_tmp_seq{4}
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:compose:vers}. }
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:compose:vers, listing and text}
  \ExplSyntaxOn
  \cs_set:Npn \__foo #1 {f(#1)}
  \cs_set:Npn \__bar #1 {g[#1]}
  \cs_set:Npn \__baz #1 {h\{#1\}}
  \erw_oper_compose_vers:nn{{\__baz}{g[#1]}{\__foo}}{X}  
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:fold}. }
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:fold, listing and text}
  \ExplSyntaxOn
  \cs_set:Nn \__foo:n {f(#1)}
  \tl_set:Nn \l_tmpa_tl{X}
  \erw_oper_fold:NN\__foo:n\l_tmpa_tl
  \l_tmpa_tl\\
  \cs_set:Nn \__bar:n {g[#1]}
  \erw_oper_fold:cN {__bar:n}\l_tmpa_tl
  \l_tmpa_tl
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% 
% \section{\textsf{timestamp}}
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:timest:alone}.}
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:timest:alone, listing and text}
  \ExplSyntaxOn
  \noindent\erw_timestamp:nn{date}{10}{-}
  \noindent\erw_timestamp:nn{time}{10}\\
  \noindent\erw_timestamp:nn{datetime}{10}\\
  \erw_timestamp:nn{date}{16}{\%}
  \erw_timestamp:nn{time}{16}\\
  \erw_option:n{ timestamp / delim = {\%} }
  \erw_timestamp:nn{datetime}{16}\\
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% 
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:timest:iow}.}
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:timest:iow, listing and text}
  \ExplSyntaxOn
  \erw_option:n{ timestamp / delim = \c_empty_tl }
  \iow_new:N \foo_iow
  \tl_set:Nx \foo_dec { \erw_timestamp:nn{datetime}{10} }
  \tl_set:Nx \foo_hex { \erw_timestamp: }
  \iow_open:Nn \foo_iow{\foo_hex}
  \iow_now:Nn\foo_iow{Hello,\ world!}
  \iow_close:N \foo_iow
  D:\foo_dec\\
  \file_timestamp:n{\foo_hex}\\
  \file_input:n{\foo_hex}
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% \section{\textsf{tl}}
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:repeat}. }
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:repeat, listing and text}
  \ExplSyntaxOn
  \erw_tl_repeat:nn{3}{abracad}abra
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:split}. }
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:split, listing and text}
  \ExplSyntaxOn
  \erw_tl_split:nn{{a}{b}{c}}{==}
  \ExplSyntaxOff
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% \phantomsection\addcontentsline{toc}{subsection}
% {\ref{listing:map}.}
% \iffalse
%<*guardlisting> 
% \fi
\begin{listing}[]
  {label=listing:map, listing and text}
  \ExplSyntaxOn
  \cs_set:Nn \__foo:n {(#1)}
  \erw_tl_map:Nn \__foo:n{{a}{b}{c}}
  \ExplSyntaxOff
\end{listing}
% \iffalse
%</guardlisting> 
% \fi
% 
% \clearpage
% \part{Other}\label{part:other}
% 
% \section{Acknowledgment}\label{other:acknowl} 
% 
% This work has benefited from Q\&A's from the \LaTeX community\cite{user-erw}
% 
% \section{Install}\label{other:install}
% \begin{enumerate}[label=\emph{\arabic*)}]
% \item Compile \file{timestamp.dtx} (under Unix, \texttt{\$tex timestamp.dtx})
% \item Put the generated \file{timestamp.sty} in the search path of the \LaTeX engine
% \end{enumerate}
% 
% \section{Support}\label{other:support}
% 
% This package is available from \url{https://www.ctan.org/pkg/timestamp} and \url{https://github.com/rogard/timestamp}.
% 
% \subsection{Platform}
% \begin{enumerate}[label=\emph{\roman*)}]
% \item 
%   ^^A uname -a
%   \begin{Verbatim}[breaklines=true]
%     Linux laptop 4.15.0-20-generic #21-Ubuntu SMP Tue Apr 24 06:16:15 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
%   \end{Verbatim}
%   \label{plat:lin}
% \end{enumerate}
% 
% \subsection{Engine}
% \begin{enumerate}[label=\emph{\alph*)}]
% \item 
%   \begin{Verbatim}[breaklines=true]
%     pdfTeX 3.14159265-2.6-1.40.20 (TeX Live 2019)
%   \end{Verbatim}
%   \label{eng:tlxviiii:pdf}
% \item 
%   \begin{Verbatim}[breaklines=true]
%     pdfTeX 3.14159265-2.6-1.40.21 (TeX Live 2020)
%   \end{Verbatim}
%   \label{eng:tlxx:pdf}
% \item
%   \begin{Verbatim}[breaklines=true]
%     LuaHBTeX, Version 1.12.0 (TeX Live 2020)
%   \end{Verbatim}
%   \label{eng:tlxx:lua}
% \item
%   \begin{Verbatim}[breaklines=true]
%     XeTeX 3.14159265-2.6-0.999992 (TeX Live 2020)
%   \end{Verbatim}
%   \label{eng:tlxx:xe}
% \end{enumerate}
% 
% \subsection{Results}
% 
% \begin{enumerate}[label=\emph{\arabic*)}]
% \item \pkg{timestamp} \docvers{0}{8} compiles satisfactorily on platform \ref{plat:lin} and engines \ref{eng:tlxx:pdf},  \ref{eng:tlxx:lua}, and \ref{eng:tlxx:xe}
% \end{enumerate}
% 
% \leavevmode
% \refstepcounter{section}
% \docsetnameref{References}
% \label{other:bib}
% \phantomsection\addcontentsline{toc}{section}{References}
% \begin{thebibliography}{1}
% \bibitem{interface3} The \LaTeX3 Project Team {\em The \LaTeX3 interfaces}, 2019,
%   \url{http://ftp.math.purdue.edu/mirrors/ctan.org/macros/latex/contrib/l3kernel/interface3.pdf}
% \bibitem{user-erw} \url{https://tex.stackexchange.com/users/112708/erwann?tab=questions}
% \end{thebibliography}
% 
%  \changes{\docvers{0}{0}}{2018/05/20}{Initial version} 
%  \changes{\docvers{0}{1}}{2018/05/23}{Brought all the modules under one file; renamed \pkg{l3erw} to \pkg{erw-l3};}
%  \changes{\docvers{0}{1}}{2018/05/23}{\pkg{disambig}/backend: changes to the key, added \cs{ProcessPackageKeysOption};}
%  \changes{\docvers{0}{1}}{2018/05/23}{\cs{numbrdcsnew} changed to \cs{newnumbrdcs} and made 'disambiguable'}
%  \changes{\docvers{0}{2}}{2018/06/21}{}
%  \changes{\docvers{0}{2}}{2018/06/21}{\cs{erw_compose} reversed order in which the functions are composed, such that it now conforms to
%  the mathematical convention ($g\circ f$ means $f$ comes before $g$)}
%  \changes{\docvers{0}{2}}{2018/06/21}{Front end cmds no longer generated with module \pkg{disambig}; Option of the same name deleted;}
%  \changes{\docvers{0}{2}}{2018/06/21}{\pkg{disambig}: pushed the code inside \cs{keys_define};\cs{disambignewcmd} no longer takes a token name as arg, rather a token.}
%  \changes{\docvers{0}{2}}{2018/06/21}{Add: \cs{erw_repeat}}
%  \changes{\docvers{0}{2}}{2018/06/21}{Add: \cs{erw_split}}
%  \changes{\docvers{0}{2}}{2018/06/21}{Add: \cs{erw_last_item}}
%  \changes{\docvers{0}{2}}{2018/06/21}{Add: \cs{erw_items_to}}
%  \changes{\docvers{0}{2}}{2018/06/21}{Add: \cs{map_thread}}
%  \changes{\docvers{0}{2}}{2018/06/21}{Re-arrange: the doc to clearly separate frontend from backend}
%  \changes{\docvers{0}{3}}{2018/06/22}{Replace: versioning, should have been 0.1.2}
%  \changes{\docvers{0}{4}}{2018/06/22}{Remove: \cs{erw_items_to} (redundant with \cs{tl_range:nnn})}
%  \changes{\docvers{0}{4}}{2018/06/22}{Add: \cs{erw_accum}}
%  \changes{\docvers{0}{4}}{2018/06/22}{Add: \cs{erw_merge}}
%  \changes{\docvers{0}{4}}{2018/06/22}{Add: \cs{erw_int_range}}
%  \changes{\docvers{0}{4}}{2018/06/22}{Add: \cs{erw_set_map}}
%  \changes{\docvers{0}{4}}{2018/06/22}{Add: \cs{erw_set_map_inline}}
%  \changes{\docvers{0}{4}}{2018/06/22}{Add: \cs{erw_is_matrix}}
%  \changes{\docvers{0}{5}}{2019/12/12}{Modify: source repository}
%  \changes{\docvers{0}{5}}{2019/12/12}{Rearrange: frontend/backend sections}
%  \changes{\docvers{0}{5}}{2019/12/12}{Split Section Preliminaries into Conventions and Requirement.}
%  \changes{\docvers{0}{5}}{2019/12/12}{Remove: \pkg{disambig}}
%  \changes{\docvers{0}{6}}{2020/02/05}{Fix: critical bug preventing \pkg{erw-l3} from working without explicit inclusion of \pkg{expl3}}
%  \changes{\docvers{0}{7}}{2020/04/24}{Replace: vers. numb. from 3 to 2 digits}
%  \changes{\docvers{0}{7}}{2020/04/24}{Rearrange: structure of implementation, e.g. \autoref{impl:oper} }
%  \changes{\docvers{0}{7}}{2020/04/24}{Add: \nameref{impl:timest}}
%  \changes{\docvers{0}{7}}{2020/04/24}{Add: \nameref{impl:option}}
%  \changes{\docvers{0}{7}}{2020/04/24}{Replace: listing's implem with that of \pkg{tocloft}}
%  \changes{\docvers{0}{7}}{2020/04/24}{Move: \cs{erw_fold_set_par:n}}
%  \changes{\docvers{0}{7}}{2020/04/24}{Move: \cs{erw_fold_apply_par:n}}
%  \changes{\docvers{0}{7}}{2020/04/24}{Remove: document level functions,\cs{numbrdcsnew}, \cs{numbrdcs}}
%  \changes{\docvers{0}{7}}{2020/04/24}{Rename: variables with suffix |tl| }%^^A get prexif |\g@@| in pl. of |\__erw| }
%  \changes{\docvers{0}{7}}{2020/04/24}{Rename: |numbrd_cs| to |csnum| }
%  \changes{\docvers{0}{7}}{2020/04/24}{Rename: |csnum| to |csint| }
%  \changes{\docvers{0}{8}}{2020/04/30}{Remove: \cs{erw_is_matrix:n} (predicate must be expandable)}
%  \changes{\docvers{0}{8}}{2020/04/30}{Replace: wrong signature |V|, by |N|, in functions such as \cs{erw_oper_compose:NnV} or \cs{erw_seq_fold:cV}}
%  \changes{\docvers{0}{8}}{2020/04/30}{Rename: all control sequence prefixes to agree with that of the heading under which they come, e.g. \cs{erw_identity:n} by \cs{erw_cs_identity:n} }
%  \changes{\docvers{0}{8}}{2020/04/30}{Remove: \cs{erw_cs_set_eq:NN} and variants}
%  \changes{\docvers{0}{8}}{2020/04/30}{Replace: \cs{@@_map:n} by \cs{@@_oper_function:n}}
%  \changes{\docvers{0}{8}}{2020/04/30}{Replace: \cs{erw_seq_fold:NN} by \cs{erw_oper_fold_seq:NN} and likewise for variants}
%  \changes{\docvers{0}{7}}{2020/04/24}{Add: \env{function} for all frontend functions.}
% 
% \PrintChanges
% \PrintIndex
% \clearpage
% \StopEventually{
% ^^A   \PrintChanges
% ^^A   \PrintIndex
% }
% \end{documentation}
% \begin{implementation}
%   \part{Implementation}\label{part:impl}
%   
%   \iffalse
%<*package>   
%   \fi
%   \section{Opening}
%    \begin{macrocode}
%<@@=erw>      
\ExplSyntaxOn
%    \end{macrocode}
% \section{basics}\label{impl:basics}
% \subsection{backend}
%    \begin{macrocode}
\cs_set:Nn \@@_cs_name:N
{
  \exp_last_unbraced:Nf \use_i:nnn {\cs_split_function:N #1}
}
%    \end{macrocode}
% \subsection{frontend}\label{basics:frontend}
%    \begin{macrocode}
\cs_set:Nn \erw_append_arg:nn
{
  {#1{#2}}
}
\cs_set:Nn \erw_cs_apply:Nn 
{
  #1{#2}
}
\cs_generate_variant:Nn \erw_cs_apply:Nn {No, Nf, Nx, c}
\cs_set:Nn \erw_cs_apply:Nnn
{
  #1{#2}{#3}
}
\cs_set:Nn \erw_cs_apply:Nnnn
{
  #1{#2}{#3}{#4}
}
\cs_set:Nn \erw_cs_apply:Nnnnn
{
  #1{#2}{#3}{#4}{#5}
}
\cs_set:Npn \erw_cs_identity:n #1{#1}
\cs_set:Nn \erw_cs_set_inline:Nn
{
  \cs_set:Npn #1 ##1{#2}
}
\cs_generate_variant:Nn \erw_cs_set_inline:Nn {cn}
\cs_set:Nn \erw_cs_gset_inline:Nn
{
  \cs_gset:Npn #1 ##1{#2}
}
\cs_generate_variant:Nn \erw_cs_gset_inline:Nn {cn}
%    \end{macrocode}
% \section{\textsf{csint}}
% \subsection{backend}
%    \begin{macrocode}
\int_new:N \g@@_csint_int
\tl_set:Nn \g@@_csint_name_tl {\erw_csint_name:n{\g@@_csint_int}}
%    \end{macrocode}
% \subsection{frontend}
%    \begin{macrocode}
\cs_set:Nn \erw_csint:nn
{
  \erw_cs_apply:cn{@@_csint_\int_to_alph:n{#1}:n}{#2}
}
\cs_set:Nn \erw_csint_name:n {@@_csint_\int_to_alph:n{#1}:n}
\cs_new:Nn \erw_csint_names:nnn
{
  \int_step_function:nnnN { #1 }{ #2 }{ #3 } \erw_csint_name:n
}
\cs_new_protected:Nn \erw_csint_new:n
{ 
  \int_incr:N \g@@_csint_int
  \erw_cs_set_inline:cn{\g@@_csint_name_tl}
  {
    \token_if_cs:NTF
    {#1}
    {#1{##1}}
    {#1}
  }
}
\cs_new:Nn \erw_csint_names_braced:nnn
{
  \int_step_function:nnnN { #1 }{ #2 }{ #3 } \erw_csint_names_braced:n
  % TODO \tl_range_braced:nnn?
}
\cs_set:Nn \erw_csint_names_braced:n {{\erw_csint_name:n{#1}}}
\cs_new:Nn \erw_csint_names_braced: 
{
  \erw_csint_names_braced:nnn{1}{1}{\g@@_csint_int}
}
\cs_new_protected:Nn \erw_csint_reset: 
{
  \int_zero:N \g@@_csint_int
  \tl_set:Nn \@@_csint_ext_tl{}%^^A TODO remove?
}
%    \end{macrocode}
% \section{\textsf{int}} \label{impl:int}
% \subsection{backend}
%    \begin{macrocode}
\cs_set:Npn \@@_int_range:nnn #1 #2 #3
{
  \int_compare:nNnTF
  {
    \int_eval:n{#2+1}
  }>{#3}
  { 
    {#1}
  }
  {
    \@@_int_range:nnn
    {
      \exp_args:Nx\erw_append_arg:nn{#1}
      {
        \int_eval:n{#2+1}
      }
    }
    {\int_eval:n{#2+1}}
    {#3}
  }
}
%    \end{macrocode}
% \subsection{frontend}
%    \begin{macrocode}
\cs_set:Nn \erw_int_range:nn
{
  \@@_int_range:nnn {{#1}}{#1}{#2}
}
\cs_set:Nn \erw_int_range:n
{
  \@@_int_range:nnn {}{0}{#1}
% ^^A Alt to:
% ^^A    \int_step_inline:nn {#1}{##1}
}
%    \end{macrocode}
% \section{\textsf{msg}} \label{impl:msg}
% \subsection{backend}
%    \begin{macrocode}
\msg_new:nnn{@@}{generic}{#1}
\msg_new:nnn{@@}{notdecl}{#1~not~declared}
\msg_new:nnn{@@}{notset}{#1~not~set}
%\end{macrocode}
% \section{\textsf{oper}}\label{impl:oper}
% \subsection{backend}
%    \begin{macrocode}
\tl_new:N \g@@_compose_tl
\tl_new:N \g@@_oper_fold_seq_item_tl
\cs_set:Nn \@@_oper_compose:NnN 
{
  \erw_cs_set_inline:Nn \@@_oper_function:n
  {
    #1{##1}#3
  }
  \exp_args:Nf\erw_tl_map:n
  {
    \tl_reverse:n{#2}
  }
}
%    \end{macrocode}
% \subsection{frontend}
%    \begin{macrocode}
\cs_set:Nn \erw_oper_compose:nN
{
  \@@_oper_compose:NnN \erw_oper_fold:NN {#1} #2
}
\cs_set:Nn \erw_oper_compose:nn
{
  \tl_set:Nn \g@@_compose_tl {#2}
  \erw_oper_compose:nN{#1}\g@@_compose_tl
  \g@@_compose_tl
}
\cs_set:Nn \erw_oper_compose_c:nN
{
  \@@_oper_compose:NnN \erw_oper_fold:cN {#1} #2
}
\cs_set:Nn \erw_oper_compose_c:nn
{
  \tl_set:Nn \g@@_compose_tl {#2}
  \erw_oper_compose_c:nN{#1}\g@@_compose_tl
  \g@@_compose_tl
}
\cs_set:Nn \erw_oper_compose_vers:nN
{
  \msg_error:nnn{@@}{notdecl}{\erw_oper_compose_vers:nN}
}
\cs_set:Nn \erw_oper_compose_vers:nn
{
  \erw_csint_reset:{}
  \tl_map_function:nN{#1}\erw_csint_new:n
  \exp_last_unbraced:Nx
  \erw_oper_compose_c:nn
  {{\erw_csint_names_braced:{}}}
  {#2}
}
\cs_set:Nn \erw_oper_compose_seq:nN
{
  \@@_oper_compose:NnN \erw_oper_fold_seq:NN {#1} #2
}
\cs_set:Nn \erw_oper_compose_seq_c:nN
{
  \@@_oper_compose:NnN \erw_oper_fold_seq:cN {#1} #2
}
\cs_set:Nn \erw_oper_compose_seq_vers:nN
{
  \msg_error:nnn{@@}{notdecl}{\erw_oper_compose_seq_vers:nN}
}
\cs_set:Nn \erw_oper_gset_function:N
{
  \erw_cs_gset_eq:NN \@@_oper_function:n #1
}
\cs_set:Nn \erw_oper_gset_function:n
{
  \erw_cs_gset_inline:Nn \@@_oper_function:n {#1}
}
\keys_define:nn{@@}
{
  oper/fold_set_par.tl_gset:N = \g@@_oper_fold_set_par_tl,
  oper/fold_set_par.value_required:n = true,
  oper/fold_set_par.default:n = {Nf},
  oper/fold_set_par.initial:n = {Nf},
  oper/fold_apply_par.tl_gset:N = \g@@_oper_fold_apply_par_tl,
  oper/fold_apply_par.value_required:n = true,
  oper/fold_apply_par.default:n = {Nf},
  oper/fold_apply_par.initial:n = {Nf}
}
\cs_set:Nn \erw_oper_fold:NN 
{
  \use:c{tl_set:\g@@_oper_fold_set_par_tl}
  #2
  {\use:c{erw_cs_apply:\g@@_oper_fold_apply_par_tl}{#1}{#2}}
}
\cs_generate_variant:Nn \erw_oper_fold:NN {cN}
\cs_set:Nn \erw_oper_fold_seq:NN 
{
  \seq_get_right:NN #2 \g@@_oper_fold_seq_item_tl
  \erw_oper_fold:NN #1 \g@@_oper_fold_seq_item_tl
  \seq_put_right:No #2 {\g@@_oper_fold_seq_item_tl}
}
\cs_generate_variant:Nn \erw_oper_fold_seq:NN {cN}
%    \end{macrocode}
% \section{\textsf{timestamp}}\label{impl:timest}
% \subsection{backend}
%    \begin{macrocode}
\msg_new:nnn{@@}{timestamp / base}{Calling~#1,~arg~must~be~'dec|hex'}
\msg_new:nnn{@@}{timestamp / period}{Calling~#1,~arg~must~be~'date|time|datetime'}
%    \end{macrocode}
% \begin{macro}{\@@_timestamp_date:N, \@@_timestamp_date_dec:, \@@_timestamp_date_hex:}
%    \begin{macrocode}
\cs_new:Nn \@@_timestamp_date_dec:
{
  \int_eval:n
  {
    \c_sys_year_int * 10000
    +\c_sys_month_int * 100
    +\c_sys_day_int *  1
  }
}
\cs_new:Nn \@@_timestamp_date:N{\int_to_hex:n{\@@_timestamp_date_dec:}}
\cs_new:Nn \@@_timestamp_date_hex:{\int_to_hex:n{\@@_timestamp_date_dec:}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_timestamp_time_dec:, \@@_timestamp_time_hex}
%    \begin{macrocode}
\cs_new:Nn \@@_timestamp_time_dec:
{
  \int_eval:n
  {
    \c_sys_hour_int * 100 
    +\c_sys_minute_int * 1 
  }
}
\cs_new:Nn\@@_timestamp_time_hex:{\int_to_hex:n{\@@_timestamp_time_dec:}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_timestamp_datetime_base:n,  \@@_timestamp_datetime_dec:n, \@@_timestamp_datetime_join:nn, \@@_timestamp_datetime_hex:n, \@@_timestamp_datetime_period:n }
%    \begin{macrocode}
\cs_new:Nn\@@_timestamp_datetime_base:n
{
  \int_case:nnTF{#1}
  {
    {10}{dec}
    {16}{hex}
  }
  {\c_empty_tl}
  {\msg_error:nnn{@@}{timestamp / base}{\@@_timestamp_datetime_base:n{#1}}}
}
\cs_new:Nn\@@_timestamp_datetime_join:nnn{#1#2#3}
\cs_new:Nn\@@_timestamp_datetime_join:nn{\@@_timestamp_datetime_join:nnn{#1}{\g@@_timestamp_delim_str}{#2}}
\cs_new:Nn\@@_timestamp_datetime_period:n
{
  \str_case:nnTF{#1}
  {
    {date}{date}
    {time}{time}
    {datetime}{datetime}
  }
  {\c_empty_tl}
  {\msg_error:nnn{@@}{ timestamp / period }{\@@_timestamp_datetime_period:n{#1}}}
}
\cs_new:Nn\@@_timestamp_datetime_dec: {\@@_timestamp_datetime_join:nn{\@@_timestamp_date_dec:}{\@@_timestamp_time_dec:}}
\cs_new:Nn\@@_timestamp_datetime_hex: {\@@_timestamp_datetime_join:nn{\@@_timestamp_date_hex:}{\@@_timestamp_time_hex:}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_timestamp:nn}
%    \begin{macrocode}
\cs_new:Nn\@@_timestamp:nn
{
  \exp_args:No
  \use:c{@@_timestamp_\@@_timestamp_datetime_period:n{#1}_\@@_timestamp_datetime_base:n{#2}:}
}
\cs_new_protected:Nn \@@_timestamp_set_delim:nn
{
  \use:c{tl_gset:N#1}
  \g@@_timestamp_delim_str{#2}
}
%    \end{macrocode}
% \end{macro}
%    \begin{macrocode}
\keys_define:nn{@@}
{  
  timestamp / delim .code:n =
  {
    \exp_last_unbraced:No
    \@@_timestamp_set_delim:nn{n}{#1}
  },
  timestamp / delim  .value_required:n = true,
  timestamp / delim  .default:n = {-},
  timestamp / delim  .initial:n = {-}
}
%    \end{macrocode}
% \subsection{frontend}
%    \begin{macrocode}
\cs_new:Nn\erw_timestamp:nn
{
  \@@_timestamp:nn{#1}{#2}
}
\cs_new:Nn\erw_timestamp:
{
  \@@_timestamp:nn{datetime}{16}
}
%    \end{macrocode}
% \section{\textsf{tl}}
% \subsection{backend}
% \begin{macro}{\@@_oper_function:n}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_oper_function:n
{
  \msg_error:nnn
  {erw}
  {notset}
  {\@@_oper_function:n}
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_map:nn}
%    \begin{macrocode}
\cs_set_protected:Nn \@@_map:nn
{
  \quark_if_recursion_tail_stop:n{#1}  
  \@@_oper_function:n{#1}  \@@_map:nn{#2}
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@@_map_thread_at:Nnn, \@@_map_thread_at:Nnnn, \@@_map_thread_at:Nnnnn, \@@_map_thread_at:Nnnnnn}
%    \begin{macrocode}
\cs_set_protected:Nn \@@_map_thread_at:Nnn
{ 
  \erw_cs_apply:Nn #1
  {\exp_args:Nf\tl_item:nn {#3} {#2} }
}
\cs_set_protected:Nn \@@_map_thread_at:Nnnn
{ 
  \erw_cs_apply:Nnn #1
  {\exp_args:Nf\tl_item:nn {#3} {#2} }
  {\exp_args:Nf\tl_item:nn {#4} {#2} }
}
\cs_set_protected:Nn \@@_map_thread_at:Nnnnn
{ 
  \erw_cs_apply:Nnnn #1
  {\exp_args:Nf\tl_item:nn {#3} {#2} }
  {\exp_args:Nf\tl_item:nn {#4} {#2} }
  {\exp_args:Nf\tl_item:nn {#5} {#2} }
}
\cs_set_protected:Nn \@@_map_thread_at:Nnnnnn
{ 
  \erw_cs_apply:Nnnnn #1
  {\exp_args:Nf\tl_item:nn {#3} {#2} }
  {\exp_args:Nf\tl_item:nn {#4} {#2} }
  {\exp_args:Nf\tl_item:nn {#5} {#2} }
  {\exp_args:Nf\tl_item:nn {#6} {#2} }
}
%    \end{macrocode}
% \end{macro}
% \subsection{frontend}
%    \begin{macrocode}
\cs_set:Nn \erw_tl_last_item:n
{
  \exp_args:Nof \tl_item:nn
  {#1}
  {
    \tl_count:n{#1}
  }
}
\cs_set_protected:Nn \erw_tl_map:n
{    
  \@@_map:nn#1\q_recursion_tail\q_recursion_stop\q_recursion_tail\q_recursion_stop
}
\cs_set_protected:Nn \erw_tl_map:Nn 
{
  \cs_set_eq:NN \@@_oper_function:n #1
  \erw_tl_map:n{#2}  
}
\cs_set_protected:Nn \erw_tl_map_inline:nn 
{
  \erw_cs_set_inline:Nn \@@_oper_function:n {#1}
  \erw_tl_map:n{#2}
}
\cs_set:Nn \erw_tl_merge:nn
{
  {#1#2}
}
\cs_set:Nn \erw_tl_repeat:nn
{
  \int_step_inline:nnnn{1}{1}{#1}{#2}
}
\cs_set_protected:Nn \erw_tl_split:nnn
{
  \tl_head:n{#1}
  \use:c{exp_args:#3} \tl_map_inline:nn 
  {
    \tl_tail:n
    {
      #1
    }
  }{#2##1}    
}
\cs_set_protected:Nn \erw_tl_split:nn
{
  \erw_tl_split:nnn{#1}{#2}{Nf}
}
\cs_set_protected:Nn \erw_tl_map_thread_at:Nnn
{
  \exp_args:Nf\int_case:nnTF
  {
    \tl_count:n{#3}
  }
  {
    {1}{ \@@_map_thread_at:Nnn #1{#2}#3 }
    {2}{ \@@_map_thread_at:Nnnn #1{#2}#3 }
    {3}{ \@@_map_thread_at:Nnnnn #1{#2}#3 }
    {4}{ \@@_map_thread_at:Nnnnnn #1{#2}#3 }
  }
  {
    % Do nothing
  }
  {
    \msg_error:nnn{@@}
    {generic}
    {erw_tl_map_thread_at:~count~of~#3~not~withing~1~to~4}        
  }
}
\cs_set_protected:Nn \erw_tl_map_thread:Nn
{
  % TODO check that #2 is a matrix
  \int_step_inline:nn
  { 
    \exp_args:Nf \tl_count:n{ \tl_head:n{#2} } 
  }
  {
    \erw_tl_map_thread_at:Nnn #1 {##1} {#2}
  }
}
%    \end{macrocode}
% \section{option}\label{impl:option}
%    \begin{macrocode}
\cs_new_protected:Nn\erw_option:n
{
  \keys_set:nn{@@}{#1}
}
%    \end{macrocode}
% \section{Closing}
%    \begin{macrocode}
\ExplSyntaxOff
%    \end{macrocode}
% \end{implementation}
% 
% \iffalse
%</package> 
% \fi
% \Finale
\endinput